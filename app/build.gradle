/*apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
// apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.devtools.ksp'*/

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.compose' version '2.1.10'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp'
}

/*plugins {
    id("com.google.dagger.hilt.android")
}*/




android {
    namespace 'eu.indiewalkabout.fridgemanager'
    compileSdkVersion 35
    defaultConfig {
        applicationId "eu.indiewalkabout.fridgemanager"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode 9
        versionName "1.5.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildFeatures {
        buildConfig true  // Add this line
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "FreddyFridge"

    productFlavors {
        production {
            dimension "FreddyFridge"
            resValue "string", "app_name", "FreddyFridge !"
        }

        myTesting {
            dimension "FreddyFridge"
            resValue "string", "app_name", "FreddyFridge Test !"
            applicationIdSuffix ".testing"
        }
    }

    sourceSets {
        main {
            java.srcDirs += ['src/main/java', 'src/main/kotlin']
        }
        myTesting {
            java.srcDirs += ['src/main/java', 'src/main/kotlin']
            res.srcDirs += 'src/main/res'
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
        production {
            java.srcDirs += ['src/main/java', 'src/main/kotlin']
            res.srcDirs += 'src/main/res'
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled true
    }

    viewBinding {
        enabled true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }
    buildFeatures {
        viewBinding true
    }
}




dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$appcompat_vers"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_vers"
    implementation "androidx.legacy:legacy-support-core-utils:$legacy_support_vers"
    implementation "com.google.android.material:material:$material_vers"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.24"
    implementation "androidx.navigation:navigation-fragment-ktx:$kotlin_nav_frag_vers"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$vm_lifecycle_vers"


    // Room dependencies
    implementation "androidx.room:room-runtime:$room_vers"
    implementation 'androidx.concurrent:concurrent-listenablefuture-callback:1.0.0-beta01'
    implementation "androidx.room:room-ktx:$room_vers"
    implementation 'com.google.android.gms:play-services-ads-lite:24.0.0'
    // annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    ksp "androidx.room:room-compiler:$room_vers"

    // LiveData dependencies
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_vers"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_vers"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_ext_vers"

    // JobService
    // implementation "com.firebase:firebase-jobdispatcher:$jobdispatcher_vers"

    // gson
    implementation 'com.google.code.gson:gson:gsonVersion'

    // Ads through  Playservices : it gives me problem....
    // implementation "com.google.android.gms:play-services-ads:$play_services_ads_vers"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$navigation_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Compose with bom
    def composeBom = platform("androidx.compose:compose-bom:$compose_bom_vers")
    implementation(composeBom)
    androidTestImplementation(composeBom)
    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.foundation:foundation-layout"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "androidx.compose.ui:ui-tooling"
    implementation "androidx.compose.ui:ui-tooling-preview"

    implementation "androidx.navigation:navigation-compose:$compose_navigation"
    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constraint"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$compose_viewmodel"

    // accompanist lib for compose integration
    implementation 'com.google.accompanist:accompanist-pager:0.22.0-rc'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttp_version"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    ksp "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_nav_compose_vers"
    implementation "androidx.hilt:hilt-work:1.2.0"
    ksp "androidx.hilt:hilt-compiler:1.2.0"

    // GDPR
    // implementation "com.google.android.ads.consent:consent-library:$consent_library_vers"

    // Preference
    implementation "androidx.preference:preference-ktx:$preference_vers"

    // Workmanager
    implementation "androidx.work:work-runtime-ktx:$work_vers"

    // Kotpref SharePreferences lib: https://github.com/chibatching/Kotpref
    // core
    implementation 'com.chibatching.kotpref:kotpref:2.10.0'
    // optional, auto initialization module
    implementation 'com.chibatching.kotpref:initializer:2.10.0'
    // optional, support saving enum value and ordinal
    implementation 'com.chibatching.kotpref:enum-support:2.10.0'
    // optional, support saving json string through Gson
    implementation 'com.chibatching.kotpref:gson-support:2.10.0'
    // optional, support LiveData observable preference
    implementation 'com.chibatching.kotpref:livedata-support:2.10.0'
    // experimental, preference screen build dsl
    implementation 'com.chibatching.kotpref:preference-screen-dsl:2.10.0'

    // debug stuff
    // debugImplementation "com.amitshekhar.android:debug-db:$amitshekhar_vers"

    // Unity
    implementation 'com.unity3d.ads:unity-ads:4.14.1'


    // Intro library
    // AndroidX Capable version
    // implementation 'com.github.AppIntro:AppIntro:v5.1.0'
    // *** OR ***
    // Support Library compatibility version
    implementation 'com.github.AppIntro:AppIntro:6.0.0'

    // https://ktlint.github.io/#getting-started
    // ktlint 'com.pinterest:ktlint:0.39.0'

    // Testing code should not be included in the main code.
    // Once https://issuetracker.google.com/128612536 is fixed this can be fixed.
    implementation "androidx.test:core:1.6.1"

    //  AndroidX Test - local unit tests - JVM testing
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation 'androidx.test:runner:1.6.2'
    testImplementation "androidx.test:core-ktx:1.6.1"
    testImplementation "androidx.test.ext:junit:1.2.1"
    testImplementation "org.robolectric:robolectric:4.10"
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "io.mockk:mockk:1.9.3"


    // AndroidX Test - Instrumented testing
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation "androidx.test.ext:junit:1.2.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation 'androidx.test:rules:1.6.1'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.6.1'

}



repositories {
    mavenCentral()
}

